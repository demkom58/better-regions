plugins {
    id 'java'
    id('com.gradleup.shadow') version '8.3.7'
    id('xyz.jpenilla.run-paper') version '2.3.1'
}

group = 'io.invokegs'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'enginehub'
        url = 'https://maven.enginehub.org/repo/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT'

    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.14'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.3.14'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7.1'

    compileOnly 'org.jspecify:jspecify:1.0.0'
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion('1.21.5')
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
